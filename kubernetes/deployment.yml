apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    autopilot.gke.io/resource-adjustment: >-
      {"input":{"containers":[{}]},"output":{"containers":[{"limits":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"},"requests":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"}}]},"modified":true}
  labels:
    app: rg-test-api
  managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app': {}
        'f:spec':
          'f:progressDeadlineSeconds': {}
          'f:revisionHistoryLimit': {}
          'f:selector':
            'f:matchLabels':
              .: {}
              'f:app': {}
          'f:strategy':
            'f:rollingUpdate':
              .: {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
            'f:type': {}
          'f:template':
            'f:metadata':
              'f:labels':
                .: {}
                'f:app': {}
            'f:spec':
              'f:containers':
                'k:{"name":"api-sha256-1"}':
                  .: {}
                  'f:env':
                    .: {}
                    'k:{"name":"HOST"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:configMapKeyRef':
                          .: {}
                          'f:key': {}
                    'k:{"name":"PORT"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:configMapKeyRef':
                          .: {}
                          'f:key': {}
                    'k:{"name":"REDIS_HOST"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:configMapKeyRef':
                          .: {}
                          'f:key': {}
                    'k:{"name":"REDIS_PORT"}':
                      .: {}
                      'f:name': {}
                      'f:valueFrom':
                        .: {}
                        'f:configMapKeyRef':
                          .: {}
                          'f:key': {}
                  'f:image': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
                  'f:resources': {}
                  'f:terminationMessagePath': {}
                  'f:terminationMessagePolicy': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              'f:schedulerName': {}
              'f:securityContext': {}
              'f:terminationGracePeriodSeconds': {}
      manager: GoogleCloudConsole
      operation: Update
      time: '2021-05-30T21:43:00Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
        'f:spec':
          'f:replicas': {}
          'f:template':
            'f:spec':
              'f:containers':
                'k:{"name":"api-sha256-1"}':
                  'f:env':
                    'k:{"name":"HOST"}':
                      'f:valueFrom':
                        'f:configMapKeyRef':
                          'f:name': {}
                    'k:{"name":"PORT"}':
                      'f:valueFrom':
                        'f:configMapKeyRef':
                          'f:name': {}
                    'k:{"name":"REDIS_HOST"}':
                      'f:valueFrom':
                        'f:configMapKeyRef':
                          'f:name': {}
                    'k:{"name":"REDIS_PORT"}':
                      'f:valueFrom':
                        'f:configMapKeyRef':
                          'f:name': {}
      manager: kubectl-client-side-apply
      operation: Update
      time: '2021-05-30T22:56:51Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:deployment.kubernetes.io/revision': {}
        'f:status':
          'f:availableReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:observedGeneration': {}
          'f:readyReplicas': {}
          'f:replicas': {}
          'f:updatedReplicas': {}
      manager: kube-controller-manager
      operation: Update
      time: '2021-05-30T22:58:31Z'
  name: rg-test-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rg-test-api
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rg-test-api
    spec:
      containers:
        - env:
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  key: HOST
                  name: rg-test-api-config-iyff
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  key: PORT
                  name: rg-test-api-config-iyff
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: rg-test-api-config-iyff
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PORT
                  name: rg-test-api-config-iyff
          image: gcr.io/sandbox-314159/github.com/darthgoon/rg-test
          imagePullPolicy: IfNotPresent
          name: api-sha256-1
          resources:
            limits:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 2Gi
            requests:
              cpu: 500m
              ephemeral-storage: 1Gi
              memory: 2Gi
          securityContext:
            capabilities:
              drop:
                - NET_RAW
      securityContext:
        seccompProfile:
          type: RuntimeDefault
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app: rg-test-api
  managedFields:
    - apiVersion: autoscaling/v2beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app': {}
        'f:spec':
          'f:maxReplicas': {}
          'f:metrics': {}
          'f:minReplicas': {}
          'f:scaleTargetRef':
            'f:apiVersion': {}
            'f:kind': {}
            'f:name': {}
      manager: GoogleCloudConsole
      operation: Update
      time: '2021-05-30T21:43:00Z'
    - apiVersion: autoscaling/v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:autoscaling.alpha.kubernetes.io/conditions': {}
            'f:autoscaling.alpha.kubernetes.io/current-metrics': {}
        'f:status':
          'f:currentCPUUtilizationPercentage': {}
          'f:currentReplicas': {}
          'f:desiredReplicas': {}
          'f:lastScaleTime': {}
      manager: vpa-recommender
      operation: Update
      time: '2021-05-30T21:48:19Z'
    - apiVersion: autoscaling/v2beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:gcb-build-id': {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
          'f:labels':
            'f:app.kubernetes.io/version': {}
      manager: kubectl-client-side-apply
      operation: Update
      time: '2021-05-30T22:56:51Z'
  name: rg-test-api-hpa-c8xw
  namespace: default
spec:
  maxReplicas: 5
  metrics:
    - resource:
        name: cpu
        targetAverageUtilization: 80
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rg-test-api
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
  finalizers:
    - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: rg-test-api
  managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:labels':
            .: {}
            'f:app': {}
        'f:spec':
          'f:externalTrafficPolicy': {}
          'f:ports':
            .: {}
            'k:{"port":80,"protocol":"TCP"}':
              .: {}
              'f:port': {}
              'f:protocol': {}
              'f:targetPort': {}
          'f:selector':
            .: {}
            'f:app': {}
          'f:sessionAffinity': {}
          'f:type': {}
      manager: GoogleCloudConsole
      operation: Update
      time: '2021-05-30T21:49:05Z'
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:finalizers':
            .: {}
            'v:"service.kubernetes.io/load-balancer-cleanup"': {}
        'f:status':
          'f:loadBalancer':
            'f:ingress': {}
      manager: kube-controller-manager
      operation: Update
      time: '2021-05-30T21:49:49Z'
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            'f:gcb-build-id': {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
          'f:labels':
            'f:app.kubernetes.io/version': {}
      manager: kubectl-client-side-apply
      operation: Update
      time: '2021-05-30T22:56:52Z'
  name: rg-test-api-service
  namespace: default
spec:
  clusterIP: 10.16.131.81
  externalTrafficPolicy: Cluster
  ports:
    - nodePort: 30906
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: rg-test-api
  sessionAffinity: None
  type: LoadBalancer

